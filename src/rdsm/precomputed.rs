use super::*;

pub fn _print_exp_log_tables() {
    let mut lookup_tables = BLANK_EXP_LOG_LUTS;
    generate_exp_log_tables(&mut lookup_tables);

    print!(
        "pub const PC_EXP_LOG_TABLE: ExpLogLUTs = ([\n// {} values of usize -> element\n",
        lookup_tables.0.len()
    );
    for x in 0..lookup_tables.0.len() {
        print!("{:#04x},", lookup_tables.0[x]);
    }

    print!(
        "],[\n// {} values of element -> usize\n",
        lookup_tables.1.len()
    );
    for x in 0..lookup_tables.1.len() {
        print!("{:#04x},", lookup_tables.1[x]);
    }
    println!("]);");
}

pub fn _print_exp_log_tables_inline() {
    let (mut exp, mut log): ExpLogLUTs = ([0; EXPVALUES], [0; LOGVALUES]);
    let mut x: Element = 1;

    for i in 0..255 {
        exp[i] = x;
        log[(x as usize - 1) % 255] = i as usize;
        x = galois_multiply(x, 0b10, QR_CODEWORD_GEN);
    }

    print!(
        "pub const PC_EXP_LOG_TABLE: ExpLogLUTs = ([\n// {} values of usize -> element\n",
        exp.len()
    );
    for x in 0..exp.len() {
        print!("{:#04x},", exp[x]);
    }

    print!("],[\n// {} values of element -> usize\n", log.len());
    for x in 0..log.len() {
        print!("{:#04x},", log[x]);
    }
    println!("]);");
}

pub const QR_EXP_LOG_TABLE: ExpLogLUTs = (
    [
        // 255 values of usize -> element
        0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1d, 0x3a, 0x74, 0xe8, 0xcd, 0x87, 0x13,
        0x26, 0x4c, 0x98, 0x2d, 0x5a, 0xb4, 0x75, 0xea, 0xc9, 0x8f, 0x03, 0x06, 0x0c, 0x18, 0x30,
        0x60, 0xc0, 0x9d, 0x27, 0x4e, 0x9c, 0x25, 0x4a, 0x94, 0x35, 0x6a, 0xd4, 0xb5, 0x77, 0xee,
        0xc1, 0x9f, 0x23, 0x46, 0x8c, 0x05, 0x0a, 0x14, 0x28, 0x50, 0xa0, 0x5d, 0xba, 0x69, 0xd2,
        0xb9, 0x6f, 0xde, 0xa1, 0x5f, 0xbe, 0x61, 0xc2, 0x99, 0x2f, 0x5e, 0xbc, 0x65, 0xca, 0x89,
        0x0f, 0x1e, 0x3c, 0x78, 0xf0, 0xfd, 0xe7, 0xd3, 0xbb, 0x6b, 0xd6, 0xb1, 0x7f, 0xfe, 0xe1,
        0xdf, 0xa3, 0x5b, 0xb6, 0x71, 0xe2, 0xd9, 0xaf, 0x43, 0x86, 0x11, 0x22, 0x44, 0x88, 0x0d,
        0x1a, 0x34, 0x68, 0xd0, 0xbd, 0x67, 0xce, 0x81, 0x1f, 0x3e, 0x7c, 0xf8, 0xed, 0xc7, 0x93,
        0x3b, 0x76, 0xec, 0xc5, 0x97, 0x33, 0x66, 0xcc, 0x85, 0x17, 0x2e, 0x5c, 0xb8, 0x6d, 0xda,
        0xa9, 0x4f, 0x9e, 0x21, 0x42, 0x84, 0x15, 0x2a, 0x54, 0xa8, 0x4d, 0x9a, 0x29, 0x52, 0xa4,
        0x55, 0xaa, 0x49, 0x92, 0x39, 0x72, 0xe4, 0xd5, 0xb7, 0x73, 0xe6, 0xd1, 0xbf, 0x63, 0xc6,
        0x91, 0x3f, 0x7e, 0xfc, 0xe5, 0xd7, 0xb3, 0x7b, 0xf6, 0xf1, 0xff, 0xe3, 0xdb, 0xab, 0x4b,
        0x96, 0x31, 0x62, 0xc4, 0x95, 0x37, 0x6e, 0xdc, 0xa5, 0x57, 0xae, 0x41, 0x82, 0x19, 0x32,
        0x64, 0xc8, 0x8d, 0x07, 0x0e, 0x1c, 0x38, 0x70, 0xe0, 0xdd, 0xa7, 0x53, 0xa6, 0x51, 0xa2,
        0x59, 0xb2, 0x79, 0xf2, 0xf9, 0xef, 0xc3, 0x9b, 0x2b, 0x56, 0xac, 0x45, 0x8a, 0x09, 0x12,
        0x24, 0x48, 0x90, 0x3d, 0x7a, 0xf4, 0xf5, 0xf7, 0xf3, 0xfb, 0xeb, 0xcb, 0x8b, 0x0b, 0x16,
        0x2c, 0x58, 0xb0, 0x7d, 0xfa, 0xe9, 0xcf, 0x83, 0x1b, 0x36, 0x6c, 0xd8, 0xad, 0x47, 0x8e,
    ],
    [
        // 255 values of element -> usize
        0x00, 0x01, 0x19, 0x02, 0x32, 0x1a, 0xc6, 0x03, 0xdf, 0x33, 0xee, 0x1b, 0x68, 0xc7, 0x4b,
        0x04, 0x64, 0xe0, 0x0e, 0x34, 0x8d, 0xef, 0x81, 0x1c, 0xc1, 0x69, 0xf8, 0xc8, 0x08, 0x4c,
        0x71, 0x05, 0x8a, 0x65, 0x2f, 0xe1, 0x24, 0x0f, 0x21, 0x35, 0x93, 0x8e, 0xda, 0xf0, 0x12,
        0x82, 0x45, 0x1d, 0xb5, 0xc2, 0x7d, 0x6a, 0x27, 0xf9, 0xb9, 0xc9, 0x9a, 0x09, 0x78, 0x4d,
        0xe4, 0x72, 0xa6, 0x06, 0xbf, 0x8b, 0x62, 0x66, 0xdd, 0x30, 0xfd, 0xe2, 0x98, 0x25, 0xb3,
        0x10, 0x91, 0x22, 0x88, 0x36, 0xd0, 0x94, 0xce, 0x8f, 0x96, 0xdb, 0xbd, 0xf1, 0xd2, 0x13,
        0x5c, 0x83, 0x38, 0x46, 0x40, 0x1e, 0x42, 0xb6, 0xa3, 0xc3, 0x48, 0x7e, 0x6e, 0x6b, 0x3a,
        0x28, 0x54, 0xfa, 0x85, 0xba, 0x3d, 0xca, 0x5e, 0x9b, 0x9f, 0x0a, 0x15, 0x79, 0x2b, 0x4e,
        0xd4, 0xe5, 0xac, 0x73, 0xf3, 0xa7, 0x57, 0x07, 0x70, 0xc0, 0xf7, 0x8c, 0x80, 0x63, 0x0d,
        0x67, 0x4a, 0xde, 0xed, 0x31, 0xc5, 0xfe, 0x18, 0xe3, 0xa5, 0x99, 0x77, 0x26, 0xb8, 0xb4,
        0x7c, 0x11, 0x44, 0x92, 0xd9, 0x23, 0x20, 0x89, 0x2e, 0x37, 0x3f, 0xd1, 0x5b, 0x95, 0xbc,
        0xcf, 0xcd, 0x90, 0x87, 0x97, 0xb2, 0xdc, 0xfc, 0xbe, 0x61, 0xf2, 0x56, 0xd3, 0xab, 0x14,
        0x2a, 0x5d, 0x9e, 0x84, 0x3c, 0x39, 0x53, 0x47, 0x6d, 0x41, 0xa2, 0x1f, 0x2d, 0x43, 0xd8,
        0xb7, 0x7b, 0xa4, 0x76, 0xc4, 0x17, 0x49, 0xec, 0x7f, 0x0c, 0x6f, 0xf6, 0x6c, 0xa1, 0x3b,
        0x52, 0x29, 0x9d, 0x55, 0xaa, 0xfb, 0x60, 0x86, 0xb1, 0xbb, 0xcc, 0x3e, 0x5a, 0xcb, 0x59,
        0x5f, 0xb0, 0x9c, 0xa9, 0xa0, 0x51, 0x0b, 0xf5, 0x16, 0xeb, 0x7a, 0x75, 0x2c, 0xd7, 0x4f,
        0xae, 0xd5, 0xe9, 0xe6, 0xe7, 0xad, 0xe8, 0x74, 0xd6, 0xf4, 0xea, 0xa8, 0x50, 0x58, 0xaf,
    ],
);

// all possible reed-solomon generator polynomials in use in QR codes
// values from tables.rs > ERROR_CORRECTION_CODEWORDS
// values coincide with the standards doc
pub const RDSM_GENERATOR_POLYNOMIALS: &[&[Element]] = &[
    &[0x01, 0x7F, 0x7A, 0x9A, 0xA4, 0x0B, 0x44, 0x75],
    &[
        0x01, 0xD8, 0xC2, 0x9F, 0x6F, 0xC7, 0x5E, 0x5F, 0x71, 0x9D, 0xC1,
    ],
    &[
        0x01, 0x89, 0x49, 0xE3, 0x11, 0xB1, 0x11, 0x34, 0x0D, 0x2E, 0x2B, 0x53, 0x84, 0x78,
    ],
    &[
        0x01, 0x1D, 0xC4, 0x6F, 0xA3, 0x70, 0x4A, 0x0A, 0x69, 0x69, 0x8B, 0x84, 0x97, 0x20, 0x86,
        0x1A,
    ],
    &[
        0x01, 0x3B, 0x0D, 0x68, 0xBD, 0x44, 0xD1, 0x1E, 0x08, 0xA3, 0x41, 0x29, 0xE5, 0x62, 0x32,
        0x24, 0x3B,
    ],
    &[
        0x01, 0x77, 0x42, 0x53, 0x78, 0x77, 0x16, 0xC5, 0x53, 0xF9, 0x29, 0x8F, 0x86, 0x55, 0x35,
        0x7D, 0x63, 0x4F,
    ],
    &[
        0x01, 0xEF, 0xFB, 0xB7, 0x71, 0x95, 0xAF, 0xC7, 0xD7, 0xF0, 0xDC, 0x49, 0x52, 0xAD, 0x4B,
        0x20, 0x43, 0xD9, 0x92,
    ],
    &[
        0x01, 0x98, 0xB9, 0xF0, 0x05, 0x6F, 0x63, 0x06, 0xDC, 0x70, 0x96, 0x45, 0x24, 0xBB, 0x16,
        0xE4, 0xC6, 0x79, 0x79, 0xA5, 0xAE,
    ],
    &[
        0x01, 0x59, 0xB3, 0x83, 0xB0, 0xB6, 0xF4, 0x13, 0xBD, 0x45, 0x28, 0x1C, 0x89, 0x1D, 0x7B,
        0x43, 0xFD, 0x56, 0xDA, 0xE6, 0x1A, 0x91, 0xF5,
    ],
    &[
        0x01, 0x7A, 0x76, 0xA9, 0x46, 0xB2, 0xED, 0xD8, 0x66, 0x73, 0x96, 0xE5, 0x49, 0x82, 0x48,
        0x3D, 0x2B, 0xCE, 0x01, 0xED, 0xF7, 0x7F, 0xD9, 0x90, 0x75,
    ],
    &[
        0x01, 0xF6, 0x33, 0xB7, 0x04, 0x88, 0x62, 0xC7, 0x98, 0x4D, 0x38, 0xCE, 0x18, 0x91, 0x28,
        0xD1, 0x75, 0xE9, 0x2A, 0x87, 0x44, 0x46, 0x90, 0x92, 0x4D, 0x2B, 0x5E,
    ],
    &[
        0x01, 0xFC, 0x09, 0x1C, 0x0D, 0x12, 0xFB, 0xD0, 0x96, 0x67, 0xAE, 0x64, 0x29, 0xA7, 0x0C,
        0xF7, 0x38, 0x75, 0x77, 0xE9, 0x7F, 0xB5, 0x64, 0x79, 0x93, 0xB0, 0x4A, 0x3A, 0xC5,
    ],
    &[
        0x01, 0xD4, 0xF6, 0x4D, 0x49, 0xC3, 0xC0, 0x4B, 0x62, 0x05, 0x46, 0x67, 0xB1, 0x16, 0xD9,
        0x8A, 0x33, 0xB5, 0xF6, 0x48, 0x19, 0x12, 0x2E, 0xE4, 0x4A, 0xD8, 0xC3, 0x0B, 0x6A, 0x82,
        0x96,
    ],
    &[
        0x01, 0x74, 0x40, 0x34, 0xAE, 0x36, 0x7E, 0x10, 0xC2, 0xA2, 0x21, 0x21, 0x9D, 0xB0, 0xC5,
        0xE1, 0x0C, 0x3B, 0x37, 0xFD, 0xE4, 0x94, 0x2F, 0xB3, 0xB9, 0x18, 0x8A, 0xFD, 0x14, 0x8E,
        0x37, 0xAC, 0x58,
    ],
    &[
        0x01, 0xCE, 0x3C, 0x9A, 0x71, 0x06, 0x75, 0xD0, 0x5A, 0x1A, 0x71, 0x1F, 0x19, 0xB1, 0x84,
        0x63, 0x33, 0x69, 0xB7, 0x7A, 0x16, 0x2B, 0x88, 0x5D, 0x5E, 0x3E, 0x6F, 0xC4, 0x17, 0x7E,
        0x87, 0x43, 0xDE, 0x17, 0x0A,
    ],
    &[
        0x01, 0x1C, 0xC4, 0x43, 0x4C, 0x7B, 0xC0, 0xCF, 0xFB, 0xB9, 0x49, 0x7C, 0x01, 0x7E, 0x49,
        0x1F, 0x1B, 0x0B, 0x68, 0x2D, 0xA1, 0x2B, 0x4A, 0x7F, 0x59, 0x1A, 0xDB, 0x3B, 0x89, 0x76,
        0xC8, 0xED, 0xD8, 0x1F, 0xF3, 0x60, 0x3B,
    ],
    &[
        0x01, 0xD2, 0xF8, 0xF0, 0xD1, 0xAD, 0x43, 0x85, 0xA7, 0x85, 0xD1, 0x83, 0xBA, 0x63, 0x5D,
        0xEB, 0x34, 0x28, 0x06, 0xDC, 0xF1, 0x48, 0x0D, 0xD7, 0x80, 0xFF, 0x9C, 0x31, 0x3E, 0xFE,
        0xD4, 0x23, 0x63, 0x33, 0xDA, 0x65, 0xB4, 0xF7, 0x28, 0x9C, 0x26,
    ],
    &[
        0x01, 0x6C, 0x88, 0x45, 0xF4, 0x03, 0x2D, 0x9E, 0xF5, 0x01, 0x08, 0x69, 0xB0, 0x45, 0x41,
        0x67, 0x6B, 0xF4, 0x1D, 0xA5, 0x34, 0xD9, 0x29, 0x26, 0x5C, 0x42, 0x4E, 0x22, 0x09, 0x35,
        0x22, 0xF2, 0x0E, 0x8B, 0x8E, 0x38, 0xC5, 0xB3, 0xBF, 0x32, 0xED, 0x05, 0xD9,
    ],
    &[
        0x01, 0xAE, 0x80, 0x6F, 0x76, 0xBC, 0xCF, 0x2F, 0xA0, 0xFC, 0xA5, 0xE1, 0x7D, 0x41, 0x03,
        0x65, 0xC5, 0x3A, 0x4D, 0x13, 0x83, 0x02, 0x0B, 0xEE, 0x78, 0x54, 0xDE, 0x12, 0x66, 0xC7,
        0x3E, 0x99, 0x63, 0x14, 0x32, 0x9B, 0x29, 0xDD, 0xE5, 0x4A, 0x2E, 0x1F, 0x44, 0xCA, 0x31,
    ],
    &[
        0x01, 0x81, 0x71, 0xFE, 0x81, 0x47, 0x12, 0x70, 0x7C, 0xDC, 0x86, 0xE1, 0x20, 0x50, 0x1F,
        0x17, 0xEE, 0x69, 0x4C, 0xA9, 0xC3, 0xE5, 0xB2, 0x25, 0x02, 0x10, 0xD9, 0xB9, 0x58, 0xCA,
        0x0D, 0xFB, 0x1D, 0x36, 0xE9, 0x93, 0xF1, 0x14, 0x03, 0xD5, 0x12, 0x77, 0x70, 0x09, 0x5A,
        0xD3, 0x26,
    ],
    &[
        0x01, 0x3D, 0x03, 0xC8, 0x2E, 0xB2, 0x9A, 0xB9, 0x8F, 0xD8, 0xDF, 0x35, 0x44, 0x2C, 0x6F,
        0xAB, 0xA1, 0x9F, 0xC5, 0x7C, 0x2D, 0x45, 0xCE, 0xA9, 0xE6, 0x62, 0xA7, 0x68, 0x53, 0xE2,
        0x55, 0x3B, 0x95, 0xA3, 0x75, 0x83, 0xE4, 0x84, 0x0B, 0x41, 0xE8, 0x71, 0x90, 0x6B, 0x05,
        0x63, 0x35, 0x4E, 0xD0,
    ],
    &[
        0x01, 0xF7, 0x33, 0xD5, 0xD1, 0xC6, 0x3A, 0xC7, 0x9F, 0xA2, 0x86, 0xE0, 0x19, 0x9C, 0x08,
        0xA2, 0xCE, 0x64, 0xB0, 0xE0, 0x24, 0x9F, 0x87, 0x9D, 0xE6, 0x66, 0xA2, 0x2E, 0xE6, 0xB0,
        0xEF, 0xB0, 0x0F, 0x3C, 0xB5, 0x57, 0x9D, 0x1F, 0xBE, 0x97, 0x2F, 0x3D, 0x3E, 0xEB, 0xFF,
        0x97, 0xD7, 0xEF, 0xF7, 0x6D, 0xA7,
    ],
    &[
        0x01, 0xF8, 0x05, 0xB1, 0x6E, 0x05, 0xAC, 0xD8, 0xE1, 0x82, 0x9F, 0xB1, 0xCC, 0x97, 0x5A,
        0x95, 0xF3, 0xAA, 0xEF, 0xEA, 0x13, 0xD2, 0x4D, 0x4A, 0xB0, 0xE0, 0xDA, 0x8E, 0xE1, 0xAE,
        0x71, 0xD2, 0xBE, 0x97, 0x1F, 0x11, 0xF3, 0xEB, 0x76, 0xEA, 0x1E, 0xB1, 0xAF, 0x35, 0xB0,
        0x1C, 0xAC, 0x22, 0x27, 0x16, 0x8E, 0xF8, 0x0A,
    ],
    &[
        0x01, 0xC4, 0x06, 0x38, 0x7F, 0x59, 0x45, 0x1F, 0x75, 0x9F, 0xBE, 0xC1, 0x05, 0x0B, 0x95,
        0x36, 0x24, 0x44, 0x69, 0xA2, 0x2B, 0xBD, 0x91, 0x06, 0xE2, 0x95, 0x82, 0x14, 0xE9, 0x9C,
        0x8E, 0x0B, 0xFF, 0x7B, 0xF0, 0xC5, 0x03, 0xEC, 0x77, 0x3B, 0xD0, 0xEF, 0xFD, 0x85, 0x38,
        0xEB, 0x1D, 0x92, 0xD2, 0x22, 0xC0, 0x07, 0x1E, 0xC0, 0xE4,
    ],
    &[
        0x01, 0x34, 0x3B, 0x68, 0xD5, 0xC6, 0xC3, 0x81, 0xF8, 0x04, 0xA3, 0x1B, 0x63, 0x25, 0x38,
        0x70, 0x7A, 0x40, 0xA8, 0x8E, 0x72, 0xA9, 0x51, 0xD7, 0xA2, 0xCD, 0x42, 0xCC, 0x2A, 0x62,
        0x36, 0xDB, 0xF1, 0xAE, 0x18, 0x74, 0xD6, 0x16, 0x95, 0x22, 0x97, 0x49, 0x53, 0xD9, 0xC9,
        0x63, 0x6F, 0x0C, 0xC8, 0x83, 0xAA, 0x39, 0x70, 0xA6, 0xB4, 0x6F, 0x74,
    ],
    &[
        0x01, 0xD3, 0xF8, 0x06, 0x83, 0x61, 0x0C, 0xDE, 0x68, 0xAD, 0x62, 0x1C, 0x37, 0xEB, 0xA0,
        0xD8, 0xB0, 0x59, 0xA8, 0x39, 0x8B, 0xE3, 0x15, 0x82, 0x1B, 0x49, 0x36, 0x53, 0xD6, 0x47,
        0x2A, 0xBE, 0x91, 0x33, 0xC9, 0x8F, 0x60, 0xEC, 0x2C, 0xF9, 0x40, 0x17, 0x2B, 0x30, 0x4D,
        0xCC, 0xDA, 0x53, 0xE9, 0xED, 0x30, 0xD4, 0xA1, 0x73, 0x2A, 0xF3, 0x33, 0x52, 0xC5,
    ],
    &[
        0x01, 0x68, 0x84, 0x06, 0xCD, 0x3A, 0x15, 0x7D, 0x8D, 0x48, 0x8D, 0x56, 0xC1, 0xB2, 0x22,
        0x56, 0x3B, 0x18, 0x31, 0xCC, 0x40, 0x11, 0x83, 0x04, 0xA7, 0x07, 0xBA, 0x7C, 0x56, 0x22,
        0xBD, 0xE6, 0xD3, 0x4A, 0x94, 0x0B, 0x8C, 0xE6, 0xA2, 0x76, 0xB1, 0xE8, 0x97, 0x60, 0x31,
        0x6B, 0x03, 0x32, 0x7F, 0xBE, 0x44, 0xAE, 0xAC, 0x5E, 0x0C, 0xA2, 0x4C, 0xE1, 0x80, 0x27,
        0x2C,
    ],
    &[
        0x01, 0xBE, 0x70, 0x1F, 0x43, 0xBC, 0x09, 0x1B, 0xC7, 0xF9, 0x71, 0x01, 0xEC, 0x4A, 0xC9,
        0x04, 0x3D, 0x69, 0x76, 0x80, 0x1A, 0xA9, 0x78, 0x7D, 0xC7, 0x5E, 0x1E, 0x09, 0xE1, 0x65,
        0x05, 0x5E, 0xCE, 0x32, 0x98, 0x79, 0x66, 0x31, 0x9C, 0x45, 0xED, 0xEB, 0xE8, 0x7A, 0xA4,
        0x29, 0xC5, 0xF2, 0x6A, 0x7C, 0x40, 0x1C, 0x11, 0x06, 0xCF, 0x62, 0x2B, 0xCC, 0xEF, 0x25,
        0x6E, 0x67, 0x34,
    ],
    &[
        0x01, 0xC1, 0x0A, 0xFF, 0x3A, 0x80, 0xB7, 0x73, 0x8C, 0x99, 0x93, 0x5B, 0xC5, 0xDB, 0xDD,
        0xDC, 0x8E, 0x1C, 0x78, 0x15, 0xA4, 0x93, 0x06, 0xCC, 0x28, 0xE6, 0xB6, 0x0E, 0x79, 0x30,
        0x8F, 0x4D, 0xE4, 0x51, 0x55, 0x2B, 0xA2, 0x10, 0xC3, 0xA3, 0x23, 0x95, 0x9A, 0x23, 0x84,
        0x64, 0x64, 0x33, 0xB0, 0x0B, 0xA1, 0x86, 0xD0, 0x84, 0xF4, 0xB0, 0xC0, 0xDD, 0xE8, 0xAB,
        0x7D, 0x9B, 0xE4, 0xF2, 0xF5,
    ],
    &[
        0x01, 0x20, 0xC7, 0x8A, 0x96, 0x4F, 0x4F, 0xBF, 0x0A, 0x9F, 0xED, 0x87, 0xEF, 0xE7, 0x98,
        0x42, 0x83, 0x8D, 0xB3, 0xE2, 0xF6, 0xBE, 0x9E, 0xAB, 0x99, 0xCE, 0xE2, 0x22, 0xD4, 0x65,
        0xF9, 0xE5, 0x8D, 0xE2, 0x80, 0xEE, 0x39, 0x3C, 0xCE, 0xCB, 0x6A, 0x76, 0x54, 0xA1, 0x7F,
        0xFD, 0x47, 0x2C, 0x66, 0x9B, 0x3C, 0x4E, 0xF7, 0x34, 0x05, 0xFC, 0xD3, 0x1E, 0x9A, 0xC2,
        0x34, 0xB3, 0x03, 0xB8, 0xB6, 0xC1, 0x1A,
    ],
    &[
        0x01, 0x83, 0x73, 0x09, 0x27, 0x12, 0xB6, 0x3C, 0x5E, 0xDF, 0xE6, 0x9D, 0x8E, 0x77, 0x55,
        0x6B, 0x22, 0xAE, 0xA7, 0x6D, 0x14, 0xB9, 0x70, 0x91, 0xAC, 0xE0, 0xAA, 0xB6, 0x6B, 0x26,
        0x6B, 0x47, 0xF6, 0xE6, 0xE1, 0x90, 0x14, 0x0E, 0xAF, 0xE2, 0xF5, 0x14, 0xDB, 0xD4, 0x33,
        0x9E, 0x58, 0x3F, 0x24, 0xC7, 0x04, 0x50, 0x9D, 0xD3, 0xEF, 0xFF, 0x07, 0x77, 0x0B, 0xEB,
        0x0C, 0x22, 0x95, 0xCC, 0x08, 0x20, 0x1D, 0x63, 0x0B,
    ],
];
